// :controller => home, :action => index

function Home(){ // carga todos los nodos
	var self = this;
	self.cache= {};
	var n = self;	// nodos html
	// nodos html

	n.cont_filtros = $("div#cont_tabs"); // contenedor de los filtros
	n.volver_filtros = $("a#volver_filtros"); // link para volver a los filtros
	n.content_filtros = $("div#filtros_ul"); // contenedor de los checkbox-filtros, se actualiza cuando se cambia de poder
	n.status_search = $("div#status_search"); // muestra en que poder se está realizando la búsqueda
	n.log_txt = $("div#status_search span#log_txt"); // donde se imprime un str del poder en el que se está realizando la búsqueda
	n.a_buscar = $("a#buscar"); // btn buscar que contiene la url para el buscador
	n.render = $("div#render"); // div donde se renderea la data
	n.str = $("input#str"); // btn buscar por string
	n.tabs_poderes = $("ul#tabs_poderes li"); // tabs poderes, para la busqueda avanzada
	n.btn_buscar_str = $("a#buscar_str"); // btn buscar por string
	n.poderes_str= $("div.buscador ul.filtro li"); // checkbox para buscar por str

	n.url = n.a_buscar.attr("href"); // btn buscar que contiene la url para el buscador
	self.get_nodos_filtros = function(){ // en cada load de los filtros
		n.filtros = $("div.filtro > ul.filtro");
		n.li_types = n.filtros.find("> li.top"); //
		n.tipo_bien = n.li_types.filter("[data-type=tb]");
		n.list_tipo_bien = n.tipo_bien.find(" > ul > li.top");

		n.span_filtrado = $("li.top > span"); // cuadrados azules

		// tabs_poderes para filtros
	};

	self.events_filtros = function(){ // eventos para los filtros
		self.get_nodos_filtros();
		n.span_filtrado.click(filtrarTodos);
		self.filtros.hideshowlist(callback);
	};

	self.loading = new Loading("popup");

	self.changeActive = function(){ // cambia las tabs de poderes al click
		var $this = $(this);
		if(!$this.is(".active")){
			n.tabs_poderes.removeClass("active");
			$this.addClass("active");
			self.load_filtros($this.data("link"), self.search(0, true));
			// self.loadData();
		}
			// para el estatus de los filtros
			self.change_status_search(0);
		return false;
	};

	self.change_status_search = function(is_x_str){
		var p= {
				"class":"por_str", // esta clase css borra el logo del poder
				"h2":""
			};
		if(is_x_str){
			$.map(n.poderes_str.filter(".selected"), function(v, i){
				p.h2 += i == 0 ? v.getAttribute("data-str") : " / "+ v.getAttribute("data-str");
			});
		}else{
			var $o = n.tabs_poderes.filter(".active"),
				id= $o.data("id");
			p["class"] = "poder_" + id;

			var detalle=[
				"",
				"",
				""
				];

			p["h2"] = $o.find("h2").text() + "<span class='detalle'>" + detalle[id] + "</span>";
		}

		self.status_search.attr("class", p.class);
		self.log_txt.html(p.h2);
	}

	self.load_filtros = function(url, callback){ // busca los filtros según el poder
		cache = escape(url);
		if (!self.cache[cache]){
			self.loading.start();
			$.ajax({
				url:url,
				success: function(data){
					n.content_filtros.html(data);
					self.events_filtros();
					self.loading.esconder();
					self.cache[cache] = data.trim();
					// self.muestra_texto_busqueda_actual();
					if (callback)
						callback();
				},
				error: function( jqXHR, textStatus, errorThrown ){
					self.loading.esconder();
				}
			});
		}else{
			n.content_filtros.html(self.cache[cache]);
			self.events_filtros();
			// self.muestra_texto_busqueda_actual();
			if (callback)
						callback();

		}
		self.change_status_search()
	};

	self.contar_index= function(){ // pone los numeros de las filas en el resultado de búsqueda
		var page = $("#paginador .pagination .current").text(),
			index = $("td.index p"),
			cant_x_pagina = 20;
		for(var i=0; i< index.length; i++){
			var pos = (index[i].innerHTML*1 + 1);
				pos += page ? (page - 1)* cant_x_pagina : 0;// si hay paginado le suma
			index[i].innerHTML = pos;
		}
	};
	self.muestra_texto_busqueda_actual = function(){
		var q = location.hash.replace("#", "");
		var inicial_str = "<b>FILTRO: </b>";
		var str= "";
		var query = new Array;
		q = q.split("&");

		for(var i=0; i< q.length; i++){
			var x = q[i].split("=");
			if(x[1])
				query[x[0]] = x[1].split("_");
		}
		var hay_indice = false;
		for(key in query){

			// var x =$("[data-type="+key+"]");
			if(key == "pd"){

			}else if(key == "str"){
					str += '"'+ query[key] + '"';

				// return false;
			}else if(key == "tb"){

			}
			// else if(key == "rkg"){
			// 	str += "RANKING DE LOS MAS VISTOS"
			// }
			else{
				var li = $("[data-type="+key+"]");
				var str_li = "";

				if (key == "nb"){
					str += "Nombre bien > ";
				}else{
					str += li.filter(".top").parent().prev().text()+ " > ";
				}
				for(var i=0; i< query[key].length; i++){
					if(i)
						str_li += " +" +li.filter("[data-id="+query[key][i]+"]").text()
					else
						str_li += li.filter("[data-id="+query[key][i]+"]").text();
				}
				str += '<span>"'+str_li.trim() +'"</span> ';
				if(li[0]) hay_indice = true;
			}
		}
		if(!str && !hay_indice){
			$("#filtro_aplicado").hide();
		}else{
			$("#filtro_aplicado")
				.html(inicial_str + urldecode(str))
				.show();

		}
	};

	function check_tb_filtrado(){
		if(n.list_tipo_bien.filter(".filtrado").length)
			n.tipo_bien.addClass("filtrado");
		else
			n.tipo_bien.removeClass("filtrado");
	}

	function filtrarTodos(){
		$parent = $(this).parent();
		if ($parent.is(".filtrado")){
			$parent.removeClass("filtrado")
				.find("li").addClass("selected");
			$parent.find("li.top").removeClass("filtrado");
		}else{
			$parent.addClass("filtrado")
				.find("li").removeClass("selected");
			$parent.find("li.top").addClass("filtrado");
		}
		check_tb_filtrado();
		return false;
	}

	var callback= { // calback para los click es llas listas de filtros
		afterClickLi: function(nodoHtml){ // se ejecuta al click de los li
			$this= $(nodoHtml);
			$parent = $this.parent();

			if($this.data("type") != "v"){	// si no es x valor
				if($this.is(".selected")){
					$this.removeClass("selected");
				}else{
					$this.addClass("selected");
				}
			}else{ // si es valor
				if($this.is(".selected")){
					if($parent.find("li.selected").length > 1) {
						$parent.find("li").removeClass("selected");
						// console.log($this,$parent);
						$this.addClass("selected");
					}else{
						$parent.find("li").addClass("selected");
					}
				}else{
					$parent.find("li").removeClass("selected")
					$this.addClass("selected");
				}
			}


			if($parent.find("li:not(.selected)").length) {
				$parent.parent()
					.addClass("filtrado");
			}else{
				$parent.parent()
					.removeClass("filtrado");
			}
			check_tb_filtrado();
		},
		afterShowUl: function(nodoHtml){ // se ejecuta después de mostrar un ul escondido
		},
		afterHideUl: function(nodoHtml){ // se ejecuta después de esconder un ul
		}
	};



	self.getParams = function(){ // retorna obj con los parametros seleccionados en los checks
		function getData(arr){
			var map = $.map(arr, function(x, i){
				return x.getAttribute("data-id");
			});
			return map;
		}
		var params= {};
		var filtrados = n.li_types.filter(".filtrado");
		for(var i = 0; i < filtrados.length; i++){
			var seleccion ="";
			switch(filtrados[i].getAttribute("data-type")){
				case "p":
					params.p = getData($(filtrados[i]).find("li.selected")).join("_");
					//params.p= params.p.join("_");
					break;
				case "c":
					params.c = getData($(filtrados[i]).find("li.selected")).join("_");
					break;
				case "tb":
					$tb = $(filtrados[i].getElementsByClassName("top"));
					var nb= getData($tb.filter(".filtrado").find("li.selected"));
					if (nb.length)
						params.nb = getData($tb.filter(".filtrado").find("li.selected")).join("_")
					else
					params.tb = getData($tb.filter(":not(.filtrado)")).join("_");
						// ;

					break;
				case "v":
					params.v = getData($(filtrados[i]).find("li.selected")).join("_");
					break;
				case "a":
					params.a = getData($(filtrados[i]).find("li.selected")).join("_");
					break;
			}
		}
		params.pd = getData(n.tabs_poderes.filter(".active")).join("_");
		return params;
	};

	self.loadData = function(params, url){
		if(!url){
			var url= n.url + "?" + params;
		}

		function callback_load(){
			self.contar_index();
			location.hash = params ? params : url.split("?")[1];
			$("#paginador .pagination a").click(function(){
				self.loadData(false, this.href);
				return false;
			});
			$("th.index").click(function(){
				var order = "&ord="+this.getAttribute("data-order");
				var	_params= location.hash.replace("#", "").replace(/&?ord=[a-zA-Z]*/gi, "") + order;
				_params = _params.replace(/&?page=[0-9]*/gi, "");
				self.loadData(_params);
				return false;
			});
			self.muestra_texto_busqueda_actual();
		}

		var cache = escape(url);
		if(!self.cache[cache]){
			self.loading.start();
			$.ajax({
				url: url,
				type: "get",
				success: function(data){
					n.render.html(data);
					// location.hash = params ? params : url.split("?")[1];
					self.cache[cache] = data.trim();
					self.loading.esconder();
					//self.contar_index();
					callback_load();
				},
				error: function( jqXHR, textStatus, errorThrown ){
					self.loading.esconder();
					// if(console) console.log(jqXHR, textStatus, errorThrown);
				}
			});
		}else{
			n.render.html(self.cache[cache]);
			// location.hash = params ? params : url.split("?")[1];
			callback_load();
			//self.loading.esconder();
		}

	};

	self.search= function(str, rkg){ // ejecuta una busqueda
		var query={};
		if(str){ // si la query es por string poderes
			if (n.str.val().length >= 3 ){
				query.str = n.str.old_val= n.str.val();
				query.pd = $.map(n.poderes_str.filter(".selected"), function(v, i){
					// p.h2 += i == 0 ? v.getAttribute("data-str") : " / "+ v.getAttribute("data-str");
					return v.getAttribute("data-id");
				}).join("_");
			}else{
				return;
			}
		}else{
			query = self.getParams();
			n.li_types.filter(".open").click();
			//var poder = n.tabs_poderes.filter(".active"); // x change_status_search
		};
		// change_status_search(p);
		params= $.param(query);
		// if(rkg) params = params + "&rkg=true";
		self.loadData(params);
		return false;
	}

	self.chek_if_query= function(){
		var hash = location.hash;
		var query;
		if(hash){
			hash = hash.replace("#", "");
			// self.loadData(urldecode(hash));
			query = urldecode(hash);
			var oHash = get_to_obj(hash);
			if(oHash.pd){
				n.poderes_str.removeClass('selected'); // checkbox de poder
				var pd = oHash.pd.split("_");

				pd.forEach(function(x, i){
					n.poderes_str.filter("[data-id= "+x+"]").addClass('selected');
				});
				if(pd.length == 1){
					n.tabs_poderes.removeClass('active');
					n.tabs_poderes.filter("[data-id= "+pd[0]+"]").addClass('active');
				}
			}
		}

		self.load_filtros(n.tabs_poderes.filter(".active").data("link"), function(){
			if(hash){
				self.loadData(urldecode(hash));
				if(oHash.str){
					esconderFiltros();
				}
			}else{
				self.search(0);
			}
			// event_btn_gen_iframes(); // aplication.js
			event_btns(); // aplication.js
		});
	};

	function esconderFiltros(){
		n.cont_filtros.slideUp("fast")
		n.volver_filtros.show("fast");
		// n.str.val(n.str.old_val);
		// para el estatus de los filtros
		self.change_status_search(1);
	}

	self.events = function(){
		n.str.bind("focus", function(){	// focus para el buscador x string
			esconderFiltros();
		});

		n.volver_filtros.click(function(){
			n.cont_filtros.slideDown("fast");
			n.volver_filtros.hide("fast");
			// para el estatus de los filtros
			self.change_status_search(0);
			return false;
		});
		n.btn_buscar_str.click(function(){console.log('BUSCAR BTN STR');self.search(1); return false;}); // buscados de str
		n.a_buscar.click(function(){self.search(0); return false;});// buscados desde los filtros
		n.tabs_poderes.click(self.changeActive);
		// self.events_filtros(); // eventos para los filtros checkbox
		// n.poderes_str.click(self.select_poder_to_search);
		n.poderes_str.bind("click", esconderFiltros);
		$("ul.social li a").click(function(){ // botones sociales
			self.social.share(this.target);
			return false;
		});
		 // llena la tabla al iniciar
		self.chek_if_query();
		/*
		self.load_filtros(n.tabs_poderes.filter(".active").data("link"), function(){
			self.chek_if_query();
			event_btn_gen_iframes(); // aplication.js
		});
		*/

	};
	self.events();
}
Home.prototype.social = new MiniSocial();


// :controller => home, :action => get_ddjj
function Ddjj(){
	var self = this;
	/* nodos html */
	self.n ={
		icos: $("ul li.ico, ul.dineros li, table.tabla tbody tr"), // nodos para tooltip
		// rows_tables: $("table.tabla tbody tr td.second"),
		tooltip: $("#tooltip"),
		ver_mas: $("a.ver")
	};
	self.cache_ddjj= function(key, _function){ // cache events
		if(!this.cache){
			this.cache={};
		}
		if(!this.cache[key]){
			this.cache[key] = _function;
			//console.log("no che");
		}else{
			//console.log("desde che");
		}
		return this.cache[key];
	};

	/* template tooltip */
	self.tmpl_tooltip = function(data){
		data = $.parseJSON(data);
		var tooltip = "";

		function tmpl_li(x, xx){
			var tmpl = "<li>_x_: <span>_xx_</span></li>";
			return tmpl.replace("_x_", x).replace("_xx_", xx);
		}

		function get_list(obj, compartido){ // compartido = recibe true si el bien es compartido en la ddjj
			// if(compartido){
				// var _obj = obj[0];
			// }else{
			// }

				var _obj = obj;
			if(compartido){
				var txt_tooltip = {
					"titular_dominio": "Titular",
					"fecha_desde":"Fecha desde",
					"fecha_hasta": "Fecha hasta",
					"porcentaje": "Porcentaje",
					"origen":"Origen",
					"valor_fiscal": "Valor",
					"valor_adq":"Valor de adq.",
					"mejoras": "Mejoras"
					// "vinculo": "Declarante"
				};
			}else{
				var txt_tooltip = {
					"nombre_bien_s": "Tipo",
					"direccion": "Dirección",
					"barrio":"Barrio",
					"localidad":"Localidad",
					"provincia":"Provincia",
					"pais":"País",
					"descripcion": "Descripción",
					"modelo": "Modelo",
					"obs": "Observaciones",
					"entidad": "Entidad",
					"ramo": "Ramo",
					"cant_acciones":"Cantidad",
					"destino":"Destino",
					"periodo": "Período",
					"superficie":  "Superficie",
					"_separador_":  "<li><hr /></li>",
					// "titular_dominio": "Titular del dominio",
					"titular_dominio": "Titular",
					"fecha_desde":"Fecha desde",
					"fecha_hasta": "Fecha hasta",
					"porcentaje": "Porcentaje",
					"origen":"Origen",
					"valor_fiscal": "Valor",
					"valor_adq":"Valor de adq.",
					"mejoras": "Mejoras"
					// "vinculo": "Declarante"
				};

			}

			for(var key in txt_tooltip){
				if(!!_obj[key] && !!_obj[key] !== ''){
					var i = [txt_tooltip[key],_obj[key]];
					if(key == "valor_adq" || key == "valor_fiscal" || key == "mejoras"){
						if((i[1] +"").length > 3){
							i[1] =(+i[1]).format(i[1] % 1 === 0 ? 0 : 2, ',', '.');
						}
						i[1] = _obj["monedas"][key] + "" + i[1];
					}

					if(key == "porcentaje")
						i[1] = (+i[1]).format(i[1] % 1 === 0 ? 0 : 2, ',', '.') + "%";

					if(key == "cant_acciones")
						i[1] = (+i[1]).format(i[1] % 1 === 0 ? 0 : 2, ',', '.');




					// if(key == "titular_dominio"){
						// i[1] = i[1] +" "+ _obj["porcentaje"] + "%";
						// // if(compartido){
							// // i[1] += ", "+ obj[1][key] + " " + obj[1]["porcentaje"] + "%"; // agrega el porcentaje del otro declarante
						// // }
					// }

					if(key == "superficie")
						i[1] = (+i[1]).format(i[1] % 1 === 0 ? 0 : 2, ',', '.') + _obj["u_medida"];

					if(key == "fecha_desde" || key == "fecha_hasta"){
						var date = i[1].split("-");
						i[1] = date[2] + "/" + date[1] + "/" + date[0];
					}
					// if(key == "nombre_bien_s")
						// i[1] = i[1] + _obj["u_medida"];

					tooltip += tmpl_li( i[0], i[1].toUpperCaseFirst ? i[1].toUpperCaseFirst() : i[1]);
				}
				if(key == "titular_dominio" && !_obj[key] ){
					if(_obj["vinculo"])	{
						tooltip += tmpl_li( txt_tooltip["titular_dominio"], _obj["vinculo"]);
					}

				}
				if(key == "_separador_")
					tooltip += txt_tooltip["_separador_"];
			}
			// if(compartido){
				// tooltip += "<li><hr /></li>"
//
			// }
		}

		if (data.constructor == Array) { // si es un array es arma el tooltip para dinero $$$ ó bienes compartidos
			if( data[0].tipo_bien_s.toLowerCase() == "Dinero ahorros".toLowerCase()){  // para dinero
				var template = Handlebars.compile($("#table_tooltip").html());
				Handlebars.registerHelper('formatNumber', function(n){
					return (+n).format(n % 1 === 0 ? null : 2, ',', '.');
				});
				return template(data);
			}else{  // para los icos
				var i = 0;
				get_list(data[i]);
				if(data[i + 1]){
					i++;
					tooltip += "<li><hr /></li>";
					for(i; i<data.length; i++){
						console.log(i)
						get_list(data[i], true);
						if (data[i + 1]){
							tooltip += "<li><hr /></li>";
						}
					}
				}
			}
		}else{ // para todos los damas
			get_list(data);
		}

		if(tooltip){
			tooltip= $(document.createElement("ul")).html(tooltip);
		}

		return tooltip;

	};

	// self.show_tooltip=function(){
		// $this = $(this);
//
		// var data = $this.find(".data").html();
		// var tooltip = self.cache_ddjj (data, self.tmpl_tooltip(data));
		// self.n.tooltip.html(tooltip);
	// };

	self.data_tooltip=function(obj){
		$this = $(obj);
		var data = $this.find(".data").html();

		var tooltip = self.cache_ddjj (data, self.tmpl_tooltip(data));

		self.n.tooltip.html(tooltip);
	};

	self.ver_mas = function(){ // btn +/- ver mas o menos en las ddjj
		var $this=$(this);
	    var $next = $this.next();
	    if($next.is(':hidden')){
	        $next.slideDown();
	        $this.addClass("menos");

	    }else{
	        $next.slideUp();
	        $this.removeClass("menos");
	    }
	    return false;
	};
	self.checkear_vacios = function(){
		var nodos = self.n.ver_mas.next();
		for(var i = 0; i < nodos.length; i++){
			// var childs=nodos[i].childNodes;
			if(nodos[i].tagName == "UL"){
				var child = nodos[i].getElementsByTagName("li");
			}else{
				var child = nodos[i].getElementsByTagName("tbody")[0].getElementsByTagName("tr");
			};
			if(!child.length){
				nodos[i].style.display="none";
				nodos[i].previousElementSibling.className = "ver";
			}
		}

	};

	(function(){
		// self.n.icos.hover(self.show_tooltip);
		$.tooltip(self.n.icos, self.n.tooltip, self.data_tooltip); // objetoOver, tooltip, callBack
		self.checkear_vacios();  // ************************************************* corrigei esto....***************************************************
		self.n.ver_mas.click(self.ver_mas);
		$(".numero").text(function(){
			var n= this.innerHTML;
			if(n){
				n= +n;
				// return n.format(n % 1 === 0 ? null : 2, ',', '.');
				return n.format(0, ',', '.');
			}
		});
		// social
		$("ul.social li a").click(function(){ // botones sociales
			console.log(this.target)
			self.social.share(this.target);
			return false;
		});

		var hash = window.location.hash;
		// busca filtros****
		if(hash){
			hash = hash.replace("#", "");
			var opacity = ".4",
				data_page = $("li.ico, li[data-flag=moneda],  table.tabla tbody tr"),
				filtro = data_page.filter(":contains("+hash+")");

			if(filtro.length && hash.length >=3){
				var txt = 'FILTRO: <span>"'+ hash +'"<span>',
					$P = $("p#filtrar"),
					a_filtrar = '<a href="#" class="cont_flecha filtrado" ><span class="spt btn_flecha filtrar"> </span>Sacar filtro</a>';

				filtro.each(function(x){
					var	el = filtro[x],
						p = el.parentNode;
					el.style.display="none";
					var	$clon = $(el.cloneNode(true));
					// console.log(clon)
					$clon.addClass("clon").prependTo(p);
					$clon.show("slow");
				});
				data_page.css("opacity", opacity);
				$P.show().append(txt + a_filtrar)

				// actions
				var $clones = $(".clon");
				$.tooltip($clones, self.n.tooltip, self.data_tooltip)
				$("p#filtrar a.cont_flecha").click(function(){
					var $this = $(this);
					if($clones.is(":animated") || data_page.is(":animated")) return false;
					if($this.is(".filtrado")){
						data_page.show("slow")
								.fadeTo("slow", 1);
						filtro.css("opacity", opacity);
						$clones.hide("slow");
						$this.removeClass("filtrado")
							.html('<span class="spt btn_flecha filtrar"> </span>Filtrar');

					}else{
						data_page.css("opacity", opacity);
						$clones.show("slow");
						filtro.hide("slow");
						$this.addClass("filtrado")
							.html('<span class="spt btn_flecha filtrar"> </span>Sacar filtro');
					}
					return false;
				});
				// filtro.show()
			}
		}
		var link_datos = $(".cont_flecha ul");
		$("ul#descargas li.cont_flecha").click(function(event) {
			link_datos.toggle("fast");
			return false;
		})
		$("ul#descargas li.cont_flecha li a").click(function(event) {
			link_datos.toggle("fast");
			var w = window.open( this.href, "descargar", "toolbar=no, location=no, resizable=no, scrollbars= no, top=20%,left=50%" );
			return false;
		})
		// event_btn_gen_iframes(); // aplication.js
		event_btns(); // aplication.js
	})();

}
Ddjj.prototype.social = new MiniSocial();
// slide para las ddjjs que no presentan
function startSlide(){
		app= {
				"content":$("div#slide"),
				"ul" : $("ul#list"),
				"next":$("a.next"),
				"prev":$("a.prev")
			}
		app.lis=app.ul.find("li");
		app.w= $(app.lis[0]).width();

		//  set left position
		app.active=0;
		app.lis.css({ "left": app.w });
		$(app.lis[app.active]).css({"left": 0});
		app.next.click(function(){
			 moverUl(1);
			 return false;
		});
		app.prev.click(function(){
			 moverUl(0);
			 return false;
		});
		validaMarginUl();
	}
	function moverUl(btn){
		if (btn) { //next
			app.active=++app.active;
			var left="-="+app.w;
			var frame=$(app.lis[app.active]);
			var easing= "easeOutBack";
		}else{ // prev
			var left="+="+app.w;
			var frame=$(app.lis[app.active]);
			app.active=--app.active;
			var easing= "easeInBack";
		};
		validaMarginUl();
			frame.animate({"left": left}, 300, easing, function(){
		});
	}
	function validaMarginUl(){
		if(!app.active)
			app.prev.hide();
		else
			app.prev.show();
		if(!app.lis[app.active+1])
			app.next.hide();
		else
			app.next.show();
	}
	function get_images_documentcloud(ul){
		var documentcloud = ul.data("documentcloud");
		$.get(documentcloud.replace(".html", ".json"), function(data){
			var tmpl = '<li><img src="{src}" width="90%"></li>';
			var pages = +data.pages;
			var image = data.resources.page.image.replace("{size}", "normal")
			for(var i = 0; i < pages; i++){
				var p=i+1;
				var src= image.replace("{page}", (p));
				ul.append(tmpl.replace("{src}", src));
			}
			startSlide();
		})
		.error(function(x){console.log(x)});

	}

	function descargar_csv_poder(el, url){
		var $el = $(el),
			poder = $el.val(),
			href = url.replace("__id__", poder),
			btn = $("#descargar");
			btn.css("visibility", "visible")
				.attr("href", href)
				.one("click", function() {
					$('#cont_desc').slideUp();
				});
	}

	function descargar(el, type){
		var $el = $(el),
			val = $el.val();
			this.format;
			this.url;
		if(type){
			this.format = "." + val;
		}else{
			this.poder = val;
			url = $el.data("url").replace("__id__", poder);
		}
		if (this.url && this.format ){
			var btn = $("#descargar"),
				href = this.url + this.format;
			btn.css("visibility", "visible")
				.attr("href", href)
				.click(function() {
					$('#cont_desc').slideUp()
				});
		}
	}
